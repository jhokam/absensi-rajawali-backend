// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum JenisKelamin {
  Laki_Laki @map("Laki-Laki")
  Perempuan
}

enum Jenjang {
  Paud
  Caberawit
  Pra_Remaja @map("Pra Remaja")
  Remaja
  Pra_Nikah  @map("Pra Nikah")
}

enum Role {
  Super_Admin @map("Super Admin")
  Admin
  User
}

enum Sambung {
  Aktif
  Tidak_Aktif @map("Tidak Aktif")
}

enum PendidikanTerakhir {
  PAUD
  TK
  SD
  SMP
  SMA_SMK @map("SMA/SMK")
  D1_D3   @map("D1-D3")
  S1_D4   @map("S1/D4")
  S2
  S3
}

enum Keterangan {
  Pendatang
  Pribumi
}

model Desa {
  id         Int        @id @default(autoincrement())
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  nama       String     @unique @db.VarChar(50)
  kelompok   Kelompok[]
}

model Kelompok {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  nama       String    @unique @db.VarChar(50)
  generus    Generus[]
  desaId     Desa      @relation(fields: [desa_id], references: [id])
  desa_id    Int
}

model Generus {
  id                       Int                @id @default(autoincrement())
  created_at               DateTime           @default(now())
  updated_at               DateTime           @updatedAt
  nama                     String             @db.VarChar(50)
  jenis_kelamin            JenisKelamin
  tempat_lahir             String?            @db.VarChar(32)
  tanggal_lahir            DateTime           @db.Date
  jenjang                  Jenjang
  nomer_whatsapp           String?            @db.VarChar(14)
  pendidikan_terakhir      PendidikanTerakhir
  nama_orang_tua           String?            @db.VarChar(50)
  nomer_whatsapp_orang_tua String?            @db.VarChar(14)
  sambung                  Sambung            @default(Tidak_Aktif)
  alamat_tempat_tinggal    String             @db.VarChar(100)
  keterangan               Keterangan
  alamat_asal              String?            @db.VarChar(100)
  kelompokId               Kelompok           @relation(fields: [kelompok_id], references: [id])
  kelompok_id              Int
  user                     User?
}

model User {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  username   String   @unique @db.VarChar(50)
  password   String   @db.VarChar(128)
  role       Role     @default(User)
  Generus    Generus  @relation(fields: [generus_id], references: [id])
  generus_id Int      @unique
}
